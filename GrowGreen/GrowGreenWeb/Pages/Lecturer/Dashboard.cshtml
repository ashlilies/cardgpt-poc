@page
@model GrowGreenWeb.Pages.Lecturer.DashboardModel

<canvas id="num_of_signups_chart" width="400" height="400"></canvas>
<br />
<canvas id="num_of_courses_chart" width="400" height="400"></canvas>
<br />

@section Scripts{
<!-- Script to init use of Chart.JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.js"
    integrity="sha256-qSIshlknROr4J8GMHRlW3fGKrPki733tLq+qeMCR05Q=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"
    integrity="sha256-xKeoJ50pzbUGkpQxDYHD7o7hxe0LaOGeguUidbq6vis=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.css"
    integrity="sha256-IvM9nJf/b5l2RoebiFno92E5ONttVyaEEsdemDC6iQA=" crossorigin="anonymous" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.js"
    integrity="sha256-arMsf+3JJK2LoTGqxfnuJPFTU4hAK57MtIPdFpiHXOU=" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css"
    integrity="sha256-aa0xaJgmK/X74WM224KMQeNQC2xYKwlAt08oZqjeF0E=" crossorigin="anonymous" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"
    integrity="sha256-Uv9BNBucvCPipKQ2NS9wYpJmi8DTOEfTA/nH2aoJALw=" crossorigin="anonymous"></script>

<script>
    // Generate Number of Courses chart 
    const barColors = ["red", "green", "blue", "orange", "brown"];
    const courseSignUpsXValues = [];
    const courseSignUpsYValues = [];

    const listOfCourseSignUps = @Html.Raw(Model.listOfCourseSignUpsJson);

    listOfCourseSignUps.forEach((courseSignup, index) => {
        let course = courseSignup.Course;
        console.log("course: ");
        console.log(course);
        courseSignUpsYValues.push(course.Name);
        courseSignUpsXValues.push(course.CourseSignups.length);
    });

    new Chart("num_of_signups_chart", {
    type: "bar",
    data: {
    labels: courseSignUpsXValues,
    datasets: [{
    backgroundColor: barColors,
    data: courseSignUpsYValues,

    }]
    },
    options: {
    legend: { display: false },
    title: {
    display: true,
    text: "Number of courses available"
    }
    }
    });

    // Generate Number of Events chart
    const coursesXValues = [];
    const coursesYValues = [];

    const listOfCourses = @Html.Raw(Model.listOfCoursesJson);

    listOfCourses.forEach((course, index) => {
        coursesXValues.push(course.Name);
        coursesYValues.push(course.MaxCapacity);
    });

    new Chart("num_of_courses_chart", {
        type: "bar",
        data: {
            labels: coursesXValues,
            datasets: [{
                backgroundColor: barColors,
                data: coursesYValues
            }]
        },
        options: {
            legend: { display: false },
            title: {
                display: true,
                text: "Number of courses"
            }
        }
    });
</script>
}