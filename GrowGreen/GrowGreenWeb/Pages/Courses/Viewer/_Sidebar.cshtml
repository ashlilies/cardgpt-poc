@using GrowGreenWeb.Models
@using GrowGreenWeb.Services
@using Microsoft.EntityFrameworkCore
@inject GrowGreenContext _context
@inject AccountService _AccountService
@{
    int courseId = ViewBag.CourseId;

    Course? course = await _context.Courses
        .Include(c => c.Lectures)
        .ThenInclude(l => l.Videos)
        .ThenInclude(v => v.VideoCompletions)
        .SingleOrDefaultAsync(c => c.Id == courseId);

    if (course is null)
        return;

    List<Lecture> lectures = course.Lectures
        .Where(l => l.StartDate <= DateTime.Today)
        .OrderBy(l => l.Timestamp)
        .ToList();

    <div class="mb-3 card p-2">
        <div class="card-body">

            <h5>@course.Name</h5>
            <a asp-page="/Courses/Viewer/Index" asp-route-id="@courseId"
                class="text-reset text-decoration-none">
                Course Overview
            </a>
            <br/>
            <hr/>
            <h5>
                <a asp-page="QnA" asp-route-id="@Model.Course.Id" class="text-reset text-decoration-none">Q&amp;A</a>
            </h5>
            <hr/>
            <h5>Contents</h5>

            @foreach (Lecture lecture in lectures)
            {
                int completedVideos = lecture.Videos
                    .SelectMany(v => v.VideoCompletions)
                    .Count(vc => vc.LearnerId == _AccountService.GetCurrentUser(Context)?.Id);
                int totalActualVideos = lecture.Videos.Count();

                bool hasCompletedLecture = completedVideos == totalActualVideos;
                
                <a asp-page="Contents" asp-route-courseId="@lecture.Course.Id"
                   asp-route-lectureId="@lecture.Id" class="text-reset text-decoration-none">
                    @if (hasCompletedLecture)
                    {
                        <i class="fa fa-check"></i>
                    }
                    
                    @lecture.Name
                </a>
                <br/>
            }
        </div>
    </div>
}